:root {
  --callout-summary: 0, 191, 188;
  --callout-bug: 233, 49, 71;
  --callout-danger: 233, 49, 71;
  --callout-example: 120, 82, 238;
  --callout-fail: 233, 49, 71;
  --callout-info: 8, 109, 221;
  --callout-todo: 8, 109, 221;
  --callout-note: 8, 109, 221;
  --callout-question: 224, 172, 0;
  --callout-quote: 158, 158, 158;
  --callout-success: 8, 185, 78;
  --callout-important: 0, 191, 188;
  --callout-warning: 236, 117, 0;
  --callout-media: 120, 82, 238;
  --callout-resource: 212, 182, 138;
}

[saved-theme=dark] {
  --callout-summary: 83, 223, 221 !important;
  --callout-bug: 251, 70, 76 !important;
  --callout-danger: 251, 70, 76 !important;
  --callout-example: 168, 130, 255 !important;
  --callout-fail: 251, 70, 76 !important;
  --callout-info: 2, 122, 255 !important;
  --callout-todo: 2, 122, 255 !important;
  --callout-note: 2, 122, 255 !important;
  --callout-question: 224, 222, 113 !important;
  --callout-quote: 158, 158, 158 !important;
  --callout-success: 68, 207, 110 !important;
  --callout-important: 83, 223, 221 !important;
  --callout-warning: 233, 151, 63 !important;
  --callout-media: 168, 130, 255 !important;
  --callout-resource: 201, 162, 107 !important;
}

blockquote.callout-collapsible {
  cursor: pointer;

  &.callout-collapsible::after {
    content: '-';
    right: 6px;
    font-weight: bolder;
    font-family: Courier New, Courier, monospace;
  }
  & > *:not(:first-child) {
    display: grid;
    grid-template-rows: 1fr;
    transition: grid-template-rows 0.3s ease-in-out;
    & > * {
      overflow: hidden;
    }
  }
}

blockquote.callout-collapsed {
  padding-bottom: 0 !important;
  & > div { 
    border-bottom-right-radius: 5px !important; 
  }
  &::after {
    content: '+' !important;
  }
  & > *:not(:first-child) {
    grid-template-rows: 0fr;
  }
}

blockquote[class*="-callout"] {
  margin-right: 0;
  border-radius: 0 5px 5px 0;
  position: relative;
  padding: 12px 12px 12px 24px;
  padding-bottom: 0.25em;
  color: var(--dark);
  border-left: 6px solid var(--primary) !important;
  & .callout-title {
    display: flex;
    gap: 4px;
    & .callout-icon > svg {
      height: 1em;
      width: 1em;
    }
    & .callout-title-inner {
      font-weight: 600;
    }
    & .callout-fold {

    }
  }
}

blockquote[class*="-callout"] > div:first-child > p::after, blockquote.callout-collapsible::after {
  display: inline-block;
  height: 18px;
  width: 18px;
  position: absolute;
  top: 0.4em;
  margin: 0.2em 1em;
}

blockquote[class*="-callout"] > div:first-child > p {
  font-weight: bold;
  // padding: 0.4em 37px;

  &::after {
    left: 0;
  }
}

blockquote[class*="-callout"] > div:empty {
  padding: 1.2em 37px;
}

$summary: summary, abstract, tldr;
$bug: bug;
$danger: danger, error;
$example: example;
$fail: fail, failure, missing;
$info: info;
$todo: todo;
$note: note;
$question: question, help, faq;
$quote: quote, cite;
$success: success, done, check;
$important: important, tip, hint;
$warning: warning, caution, attention;
$media: media, video, audio, recording;
$resource: resource, document, attachment, file;
$types: $summary, $bug, $danger, $example, $fail, $info, $todo, $note, $question, $quote, $success, $important, $warning, $media, $resource;

@function getstr($l) {
  $v: nth($l, 1);
  @return $v;
}

@each $type in $types {
  @each $s in $type {
    blockquote.#{$s}-callout {
      --callout-color: var(--callout-#{getstr($type)});
      border-left: 6px solid rgba(var(--callout-color), 1) !important;
      background-color: rgba(var(--callout-color), 0.1) !important;
      & > .callout-title {
        & .callout-icon {
          color: rgba(var(--callout-color), 1) !important;
        }
        & .callout-title-inner {
          color: rgba(var(--callout-color), 1) !important;
        }
      }  
    }
  }
}
